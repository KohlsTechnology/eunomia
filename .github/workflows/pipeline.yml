---
on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.6, 1.16.13]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Compile
      run: make build
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.43.0
        skip-go-installation: true
        skip-pkg-cache: true
        skip-build-cache: true
    - name: Test
      run: make test-unit
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        fail_ci_if_error: true
        files: ./coverage.txt
        verbose: true
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        install-only: true
        version: v1.0.0
    - name: Test GoReleaser
      run: make test-release
  test-e2e:
    strategy:
      matrix:
        k8s-version: ["kindest/node:v1.21.2", "kindest/node:v1.20.7"]
        os: [ubuntu-latest]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.2.0
      with:
        cluster_name: kind
        node_image: ${{ matrix.k8s-version }}
    - name: Install operator-sdk
      run: |
        mkdir -p "$GITHUB_WORKSPACE/bin"
        curl -o "$GITHUB_WORKSPACE/bin/operator-sdk" -L https://github.com/operator-framework/operator-sdk/releases/download/v0.17.1/operator-sdk-v0.17.1-x86_64-linux-gnu
        echo "$GITHUB_WORKSPACE/bin" >> "$GITHUB_PATH"
        chmod +x "$GITHUB_WORKSPACE/bin/operator-sdk"
    - name: Test E2E
      run: make test-e2e
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.6
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE="quay.io/kohlstechnology/eunomia"
          VERSION="${GITHUB_REF#refs/tags/}"
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo "::set-output name=tags::${TAGS}"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to quay.io
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
          registry: quay.io
      - name: Build and push to quay.io
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true
          version: v1.0.0
      - name: Run GoReleaser
        run: make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
